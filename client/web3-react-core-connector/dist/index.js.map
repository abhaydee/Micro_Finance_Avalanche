{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { Provider } from '@web3-react/types';\n\nexport type CoreWalletProvider = Provider & {\n  isAvalanche?: boolean;\n  isConnected?: () => boolean;\n  providers?: CoreWalletProvider[];\n};\n\ninterface Window {\n  ethereum?: CoreWalletProvider;\n  avalanche?: CoreWalletProvider;\n}\n\nexport interface DetectCoreWalletProviderOptions {\n  silent?: boolean;\n  timeout?: number;\n}\n\n/**\n * Returns a Promise that resolves to the value of window.ethereum or window.avalanche\n * if it is set with the Core Wallet provider within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nexport function detectCoreWalletProvider<T = CoreWalletProvider>({\n  silent = false,\n  timeout = 3000,\n}: DetectCoreWalletProviderOptions = {}): Promise<T | null> {\n  let handled = false;\n\n  return new Promise((resolve) => {\n    if ((window as Window).ethereum || (window as Window).avalanche) {\n      handleProvider();\n    } else {\n      window.addEventListener('avalanche#initialized', handleProvider, {\n        once: true,\n      });\n\n      setTimeout(() => {\n        handleProvider();\n      }, timeout);\n    }\n\n    function handleProvider() {\n      if (handled) {\n        return;\n      }\n      handled = true;\n\n      window.removeEventListener('avalanche#initialized', handleProvider);\n\n      const { ethereum, avalanche } = window as Window;\n\n      if (ethereum && ethereum.isAvalanche) {\n        resolve(ethereum as unknown as T);\n      } else if (avalanche && avalanche.isAvalanche) {\n        resolve(avalanche as unknown as T);\n      } else {\n        const message = avalanche\n          ? 'Non-CoreWallet window.avalanche detected.'\n          : 'Unable to detect window.avalanche.';\n\n        !silent && console.error('detectCoreWalletProvider:', message);\n        resolve(null);\n      }\n    }\n  });\n}\n","import type {\n  Actions,\n  AddEthereumChainParameter,\n  ProviderConnectInfo,\n  ProviderRpcError,\n  WatchAssetParameters,\n} from '@web3-react/types';\nimport { Connector } from '@web3-react/types';\n\nimport {\n  CoreWalletProvider,\n  detectCoreWalletProvider,\n  DetectCoreWalletProviderOptions,\n} from './utils';\n\nexport class NoCoreWalletError extends Error {\n  public constructor() {\n    super('Core Wallet not installed');\n    this.name = NoCoreWalletError.name;\n    Object.setPrototypeOf(this, NoCoreWalletError.prototype);\n  }\n}\n\nfunction parseChainId(chainId: string) {\n  return Number.parseInt(chainId, 16);\n}\n\n/**\n * @param options - Options to pass to the wallet detector\n * @param onError - Handler to report errors thrown from eventListeners.\n */\nexport interface CoreWalletConstructorArgs {\n  actions: Actions;\n  options?: DetectCoreWalletProviderOptions;\n  onError?: (error: Error) => void;\n}\n\nexport class CoreWallet extends Connector {\n  /** {@inheritdoc Connector.provider} */\n  public provider: CoreWalletProvider | undefined;\n\n  private readonly options?: DetectCoreWalletProviderOptions;\n  private eagerConnection?: Promise<void>;\n\n  constructor({ actions, options, onError }: CoreWalletConstructorArgs) {\n    super(actions, onError);\n    this.options = options;\n  }\n\n  private async isomorphicInitialize(): Promise<void> {\n    if (this.eagerConnection) return;\n\n    return (this.eagerConnection = detectCoreWalletProvider(this.options).then(\n      (provider) => {\n        if (provider) {\n          this.provider = provider;\n\n          // handle the case when e.g. core wallet and coinbase wallet are both installed\n          if (this.provider.providers?.length) {\n            this.provider =\n              this.provider.providers.find((p) => p.isAvalanche) ??\n              this.provider.providers[0];\n          }\n\n          this.provider.on(\n            'connect',\n            ({ chainId }: ProviderConnectInfo): void => {\n              this.actions.update({ chainId: parseChainId(chainId) });\n            }\n          );\n\n          this.provider.on('disconnect', (error: ProviderRpcError): void => {\n            this.actions.resetState();\n            this.onError?.(error);\n          });\n\n          this.provider.on('chainChanged', (chainId: string): void => {\n            this.actions.update({ chainId: parseChainId(chainId) });\n          });\n\n          this.provider.on('accountsChanged', (accounts: string[]): void => {\n            if (accounts.length === 0) {\n              // handle this edge case by disconnecting\n              this.actions.resetState();\n            } else {\n              this.actions.update({ accounts });\n            }\n          });\n        }\n      }\n    ));\n  }\n\n  /** {@inheritdoc Connector.connectEagerly} */\n  public async connectEagerly(): Promise<void> {\n    const cancelActivation = this.actions.startActivation();\n\n    await this.isomorphicInitialize();\n    if (!this.provider) return cancelActivation();\n\n    return Promise.all([\n      this.provider.request({ method: 'eth_chainId' }) as Promise<string>,\n      this.provider.request({ method: 'eth_accounts' }) as Promise<string[]>,\n    ])\n      .then(([chainId, accounts]) => {\n        if (accounts.length) {\n          this.actions.update({ chainId: parseChainId(chainId), accounts });\n        } else {\n          throw new Error('No accounts returned');\n        }\n      })\n      .catch((error) => {\n        cancelActivation();\n        throw error;\n      });\n  }\n\n  /**\n   * Initiates a connection.\n   *\n   * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n   * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n   * to the chain, if one of two conditions is met: either they already have it added in their extension, or the\n   * argument is of type AddEthereumChainParameter, in which case the user will be prompted to add the chain with the\n   * specified parameters first, before being prompted to switch.\n   */\n  public async activate(\n    desiredChainIdOrChainParameters?: number | AddEthereumChainParameter\n  ): Promise<void> {\n    let cancelActivation: () => void;\n    if (!this.provider?.isConnected?.())\n      cancelActivation = this.actions.startActivation();\n\n    return this.isomorphicInitialize()\n      .then(async () => {\n        if (!this.provider) throw new NoCoreWalletError();\n\n        return Promise.all([\n          this.provider.request({ method: 'eth_chainId' }) as Promise<string>,\n          this.provider.request({ method: 'eth_requestAccounts' }) as Promise<\n            string[]\n          >,\n        ]).then(([chainId, accounts]) => {\n          const receivedChainId = parseChainId(chainId);\n          const desiredChainId =\n            typeof desiredChainIdOrChainParameters === 'number'\n              ? desiredChainIdOrChainParameters\n              : desiredChainIdOrChainParameters?.chainId;\n\n          // if there's no desired chain, or it's equal to the received, update\n          if (!desiredChainId || receivedChainId === desiredChainId)\n            return this.actions.update({ chainId: receivedChainId, accounts });\n\n          const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n\n          // if we're here, we can try to switch networks\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          return this.provider!.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: desiredChainIdHex }],\n          })\n            .catch((error: ProviderRpcError) => {\n              if (\n                error.code === 4902 &&\n                typeof desiredChainIdOrChainParameters !== 'number'\n              ) {\n                // if we're here, we can try to add a new network\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                return this.provider!.request({\n                  method: 'wallet_addEthereumChain',\n                  params: [\n                    {\n                      ...desiredChainIdOrChainParameters,\n                      chainId: desiredChainIdHex,\n                    },\n                  ],\n                });\n              }\n\n              throw error;\n            })\n            .then(() => this.activate(desiredChainId));\n        });\n      })\n      .catch((error) => {\n        cancelActivation?.();\n        throw error;\n      });\n  }\n\n  public async watchAsset({\n    address,\n    symbol,\n    decimals,\n    image,\n  }: WatchAssetParameters): Promise<true> {\n    if (!this.provider) throw new Error('No provider');\n\n    return this.provider\n      .request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address, // The address that the token is at.\n            symbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals, // The number of decimals in the token\n            image, // A string url of the token logo\n          },\n        },\n      })\n      .then((success) => {\n        if (!success) throw new Error('Rejected');\n        return true;\n      });\n  }\n}\n"],"names":["Connector"],"mappings":"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"}